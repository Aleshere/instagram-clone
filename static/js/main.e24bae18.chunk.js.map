{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e24bae18.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>App Built with React and Firebase</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD2lxdbAVxuhn1soiwJKYgBSQB-rSEEl54\",\r\n    authDomain: \"aleshere-firegram.firebaseapp.com\",\r\n    databaseURL: \"https://aleshere-firegram.firebaseio.com\",\r\n    projectId: \"aleshere-firegram\",\r\n    storageBucket: \"aleshere-firegram.appspot.com\",\r\n    messagingSenderId: \"328259354716\",\r\n    appId: \"1:328259354716:web:5870be55c799b6e54e2699\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore = firebase.firestore();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  export { projectFirestore, projectStorage, timestamp };","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n    const [ progress, setProgress ] = useState(0);\r\n    const [ error, setError ] = useState(null);\r\n    const [ url, setUrl ] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // references\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({ url: url, createdAt: createdAt });\r\n            setUrl(url);\r\n        })\r\n    }, [file])\r\n\r\n    return { progress, url, error }\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion'\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n    const { url, progress } = useStorage(file);\r\n    \r\n    useEffect(() => {\r\n        if(url) {\r\n            setFile(null);\r\n        }\r\n    }, [url])\r\n\r\n    return (\r\n        <motion.div\r\n        className='progress-bar'\r\n        initial={{ width: 0 }}\r\n        animate={{ width: progress + '%' }}\r\n        ></motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n    const [ file, setFile] = useState(null);\r\n    const [ error, setError ] = useState(null);\r\n    const types = ['image/png', 'image/jpeg'];\r\n\r\n    const changeHandler = (e) => {\r\n        let selected = e.target.files[0];\r\n\r\n        if(selected && types.includes(selected.type)){\r\n            setFile(selected);\r\n            setError('');\r\n        } else {\r\n            setFile(null);\r\n            setError('Please select an image (png or jpeg)');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={changeHandler} />\r\n                <span>+</span>\r\n            </label>\r\n            <div className='output' >\r\n                { error && <div className='error' >{ error }</div> }\r\n                { file && <div>{ file.name }</div> }\r\n                { file && <ProgressBar file={file} setFile={setFile} />}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UploadForm;","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n    const [ docs, setDocs ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snap) => {\r\n                let documents = [];\r\n                snap.forEach(doc=> {\r\n                    documents.push({ ...doc.data(), id: doc.id })\r\n                });\r\n                setDocs(documents);\r\n            });\r\n\r\n            return () => unsub();\r\n\r\n    }, [collection])\r\n\r\n    return { docs };\r\n}\r\n\r\nexport default useFirestore;\r\n","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n    const { docs } = useFirestore('images');\r\n\r\n\r\n    return (\r\n        <div className='img-grid'>\r\n            { docs && docs.map(doc => (\r\n                <motion.div\r\n                    className='img-wrap'\r\n                    key={doc.id}\r\n                    layout\r\n                    whileHover={{ opacity: 1 }}\r\n                    onClick={() => setSelectedImg(doc.url)}\r\n                >\r\n                    <motion.img\r\n                    src={doc.url}\r\n                    alt=\"uploaded pic\" \r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{ delay: 1 }}\r\n                    />\r\n                </motion.div>\r\n            )) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains('backdrop')){\r\n            setSelectedImg(null)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n        className='backdrop'\r\n        onClick={handleClick}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        >\r\n            <motion.img\r\n            src={selectedImg}\r\n            alt=\"enlarged-pic\"\r\n            initial={{ y: '-100vh' }}\r\n            animate={{ y: 0 }}\r\n            />\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nfunction App() {\n  const [ selectedImg, setSelectedImg ] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} /> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}